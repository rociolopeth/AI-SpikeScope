#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
@authors: %(Val-Calvo, Mikel and Alegre-Cortés, Javier)
@emails: %(mikel1982mail@gmail.com, jalegre@umh.es)
@institutions: %(Dpto. de Inteligencia Artificial, Universidad Nacional de Educación a Distancia (UNED), Postdoctoral Researcher Instituto de Neurociencias UMH-CSIC)
"""

class UTAH:
    electrode2channel = {              '88':2,'78':1,'68':3,'58':4,'48':6,'38':8,'28':10,'18':14, 
                                    '96':65,'87':66,'77':33,'67':34,'57':7,'47':9,'37':11,'27':12,'17':16,'8':18,
                                    '95':67,'86':68,'76':35,'66':36,'56':5,'46':17,'36':13,'26':23,'16':20,'7':22,
                                    '94':69,'85':70,'75':37,'65':38,'55':48,'45':15,'35':19,'25':25,'15':27,'6':24,
                                    '93':71,'84':72,'74':39,'64':40,'54':42,'44':50,'34':54,'24':21,'14':29,'5':26,
                                    '92':73,'83':74,'73':41,'63':43,'53':44,'43':46,'33':52,'23':62,'13':31,'4':28,
                                    '91':75,'82':76,'72':45,'62':47,'52':51,'42':56,'32':58,'22':60,'12':64,'3':30,
                                    '90':77,'81':78,'71':82,'61':49,'51':53,'41':55,'31':57,'21':59,'11':61,'2':32,
                                    '89':79,'80':80,'70':84,'60':86,'50':87,'40':89,'30':91,'20':94,'10':63,'1':95,
                                            '79':81,'69':83,'59':85,'49':88,'39':90,'29':92,'19':93,'9':96}
    
   
    channels_xy = {             '88':(0,1),'78':(0,2),'68':(0,3),'58':(0,4),'48':(0,5),'38':(0,6),'28':(0,7),'18':(0,8), 
                          '96':(1,0),'87':(1,1),'77':(1,2),'67':(1,3),'57':(1,4),'47':(1,5),'37':(1,6),'27':(1,7),'17':(1,8),'8':(1,9),
                          '95':(2,0),'86':(2,1),'76':(2,2),'66':(2,3),'56':(2,4),'46':(2,5),'36':(2,6),'26':(2,7),'16':(2,8),'7':(2,9),
                          '94':(3,0),'85':(3,1),'75':(3,2),'65':(3,3),'55':(3,4),'45':(3,5),'35':(3,6),'25':(3,7),'15':(3,8),'6':(3,9),
                          '93':(4,0),'84':(4,1),'74':(4,2),'64':(4,3),'54':(4,4),'44':(4,5),'34':(4,6),'24':(4,7),'14':(4,8),'5':(4,9),
                          '92':(5,0),'83':(5,1),'73':(5,2),'63':(5,3),'53':(5,4),'43':(5,5),'33':(5,6),'23':(5,7),'13':(5,8),'4':(5,9),
                          '91':(6,0),'82':(6,1),'72':(6,2),'62':(6,3),'52':(6,4),'42':(6,5),'32':(6,6),'22':(6,7),'12':(6,8),'3':(6,9),
                          '90':(7,0),'81':(7,1),'71':(7,2),'61':(7,3),'51':(7,4),'41':(7,5),'31':(7,6),'21':(7,7),'11':(7,8),'2':(7,9),
                          '89':(8,0),'80':(8,1),'70':(8,2),'60':(8,3),'50':(8,4),'40':(8,5),'30':(8,6),'20':(8,7),'10':(8,8),'1':(8,9),
                                     '79':(9,1),'69':(9,2),'59':(9,3),'49':(9,4),'39':(9,5),'29':(9,6),'19':(9,7),'9':(9,8)}
    
    def channel2electrode(self, channel):
        dict_ = {str(value):key for key,value in zip(self.electrode2channel.keys(),self.electrode2channel.values())}
        return dict_[str(channel)]
    